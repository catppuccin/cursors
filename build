#!/usr/bin/env bash

# Volantes cursors, based on KDE Breeze
# Copyright (c) 2016 Keefer Rourke <keefer.rourke@gmail.com>
# Copyright (c) 2020 Sergei Eremenko <https://github.com/SmartFinn>

set -eu

INKSCAPE_VERSION=$(inkscape --version 2>/dev/null | awk '/Inkscape[ ]/ {print $2; exit}')

# Generates the commands required for SVG -> PNG conversion
# These commands are to be used within inkscape's "shell" mode which allows for batch processing in a single inkscape process
generate_inkscape_commands() {
  local src_dir="$1"
  local out_dir="$2"
  local file size bitmap_file

  [ -d "$src_dir" ] || return 1
  [ -d "$out_dir" ] || mkdir -p "$out_dir"

  # shellcheck disable=SC2016
  for file in "$src_dir"/*.svg; do
    [ -f "$file" ] || continue
    for size in 24 32 48 64; do
      bitmap_file="${out_dir%/}/$(basename "$file" .svg)_${size}.png"
      INKSCAPE_COMMANDS+="file-open:$file; export-filename:$bitmap_file; export-height:$size; export-width:$size; export-do; file-close;"
    done
  done
}

convert_to_x11cursor() {
  local src_dir="$1"
  local out_dir="$2"
  local config base_name

  [ -d "$src_dir" ] || return 1

  if [ -d "$out_dir" ]; then
    rm -rf "$out_dir"
  fi

  mkdir -p "$out_dir"

  for config in "$CONFIG_DIR"/*.cursor; do
    [ -f "$config" ] || continue
    base_name="$(basename "$config" .cursor)"
    xcursorgen -p "$src_dir" "$config" "$out_dir/$base_name"
  done
}

create_aliases() {
  local out_dir="$1"
  local symlink target

  while read -r symlink target; do
    [ -e "$out_dir/$symlink" ] && continue
    ln -sf "$target" "$out_dir/$symlink"
  done <"$ALIASES"
}

create_hyprcursors() {
  local src_dir="$1"
  local out_dir="$2"
  local theme_name="$3"
  local hypr_dir="$out_dir/hyprcursors"
  local filename dir cursor_dir striped base_name symlink target cursor_dir theme_comment

  [ -d "$src_dir" ] || return 1
  [ -d "$out_dir" ] || mkdir -p "$out_dir"
  [ -d "$hypr_dir" ] || mkdir -p "$hypr_dir"

  for file in "$src_dir"/*.svg; do
    filename=$(basename -- "$file")

    if [[ "$filename" == *_24.svg ]]; then
      continue
    fi
    if [[ "$filename" == *-[0-9][0-9].svg ]]; then
      dir="${filename%-[0-9][0-9].svg}"
      cursor_dir="$hypr_dir/$dir"
      striped="${filename#"$dir"}"

      [ -d "$cursor_dir" ] || mkdir -p "$cursor_dir"
      cp -- "$file" "$cursor_dir"
    else
      dir="${filename%.svg}"
      cursor_dir="$hypr_dir/$dir"

      [ -d "$cursor_dir" ] || mkdir -p "$cursor_dir"

      cp -- "$file" "$cursor_dir"
    fi
  done

  for config in "$CONFIG_DIR"/*.hl; do
    [ -f "$config" ] || continue

    base_name="$(basename "$config" .hl)"
    cursor_dir="$hypr_dir/$base_name"
    [ -d "$cursor_dir" ] || continue
    cp "$config" "$cursor_dir/meta.hl"
  done

  while read -r symlink target; do
    cursor_dir="$out_dir/$target"
    if [ -f "$cursor_dir"/meta.hl ]; then
      echo "define_override = $symlink" >>"$cursor_dir"/meta.hl
    fi
  done <"$ALIASES"

  theme_comment="$(grep Comment "$src_dir"/index.theme)"
  cat >"$out_dir"/manifest.hl <<-EOM
		name = ${theme_name%-cursors}
		description = ${theme_comment#Comment=}
		version = $(git show -s --format=%cd --date=format:%Y%m%d HEAD)
		cursors_directory = hyprcursors
	EOM
}

compile_hyprcursors() {
  local src_dir="$1"
  local out_dir="$2"
  local theme_name="$(basename "$1")"
  local compile_dir="$1/../theme_${theme_name%-cursors}"
  local filename dir cursor_dir striped base_name symlink target cursor_dir

  [ -d "$src_dir" ] || return 1
  [ -d "$out_dir" ] || mkdir -p "$out_dir"

  hyprcursor-util -c "$src_dir" >/dev/null
  cp -a "$compile_dir/." "$out_dir/"
}

SCRIPT_DIR="$(dirname "$0")"
SRC_DIR="$SCRIPT_DIR/src"
OUT_DIR="$SCRIPT_DIR/dist"
PNG_DIR="$SCRIPT_DIR/pngs"
HL_DIR="$SCRIPT_DIR/hl"
BUILD_DIR="$SCRIPT_DIR/build"
CONFIG_DIR="$SRC_DIR/config"

AUTHORS="$SCRIPT_DIR/AUTHORS"
LICENSE="$SCRIPT_DIR/LICENSE"
ALIASES="$SRC_DIR/cursorList"

ACCENTS="blue dark flamingo green lavender light maroon mauve peach pink red rosewater sapphire sky teal yellow"
INKSCAPE_COMMANDS=""

HYPRCURSOR=0

while getopts "f:a:vh" option; do
  case $option in
  f)
    FLAVOR="$OPTARG"
    ;;
  a)
    ACCENTS="$OPTARG"
    ;;
  v)
    DEBUG=1
    echo "[DEBUG] - Debug logging enabled"
    ;;
  h)
    HYPRCURSOR=1
    ;;
  \?)
    echo "Invalid option: -$OPTARG"
    exit 1
    ;;
  esac
done
echo "[INFO] - Flavor: '$FLAVOR'"
echo "[INFO] - Accent(s): '$ACCENTS'"

echo "[INFO] - Generating inkscape commands..."
for accent in $ACCENTS; do
  theme_name="catppuccin-$FLAVOR-$accent-cursors"
  theme_src_dir="$SRC_DIR/$theme_name"
  theme_build_dir="$BUILD_DIR/$theme_name"
  theme_out_dir="$OUT_DIR/$theme_name"
  theme_png_dir="$PNG_DIR/$theme_name"

  generate_inkscape_commands "$theme_src_dir" "$theme_png_dir"
done
echo "[INFO] - Generating inkscape commands complete"

echo "[INFO] - Converting SVGs to PNGs..."
inkscape --shell <<< ${INKSCAPE_COMMANDS} &> /dev/null
echo "[INFO] - Converting SVGs to PNGs complete"

echo "[INFO] - Converting to x11cursor & creating aliases..."
for accent in $ACCENTS; do
  theme_name="catppuccin-$FLAVOR-$accent-cursors"
  theme_src_dir="$SRC_DIR/$theme_name"
  theme_build_dir="$BUILD_DIR/$theme_name"
  theme_out_dir="$OUT_DIR/$theme_name"
  theme_png_dir="$PNG_DIR/$theme_name"

  convert_to_x11cursor "$theme_png_dir" "$theme_out_dir/cursors"
  create_aliases "$theme_out_dir/cursors"

  cp -f "$theme_src_dir/index.theme" "$theme_out_dir"
  cp -f "$AUTHORS" "$theme_out_dir"
  cp -f "$LICENSE" "$theme_out_dir"
done
echo "[INFO] - Converting to x11cursor & creating aliases complete"

if [[ $HYPRCURSOR == 1 ]]; then
  echo "[INFO] - Generating hyprcursor theme..."
  for accent in $ACCENTS; do
    theme_name="catppuccin-$FLAVOR-$accent-cursors"
    theme_src_dir="$SRC_DIR/$theme_name"
    theme_build_dir="$HL_DIR/$theme_name"
    theme_out_dir="$OUT_DIR/$theme_name"

    create_hyprcursors "$theme_src_dir" "$theme_build_dir" "$theme_name"
    compile_hyprcursors "$theme_build_dir" "$theme_out_dir"
  done
  echo "[INFO] - Generating hyprcursor theme complete"
fi
